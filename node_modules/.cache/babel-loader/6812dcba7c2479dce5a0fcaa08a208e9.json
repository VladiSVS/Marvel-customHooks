{"ast":null,"code":"var _jsxFileName = \"/Users/uladzimirsiauko/Happy/Udemy/marvel_starter/src/components/charList/CharList.js\";\nimport './charList.scss';\nimport React from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CharList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charList: [],\n      loading: true,\n      error: false,\n      newItemLoading: false,\n      offset: 210,\n      charEnded: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.onRequest = offset => {\n      this.onCharListLoading();\n      this.marvelService.getAllCharacters(offset).then(this.onCharListLoaded).catch(this.onError);\n    };\n\n    this.onCharListLoading = () => {\n      this.setState({\n        newItemLoading: true\n      });\n    };\n\n    this.onCharListLoaded = newCharList => {\n      let ended = false;\n\n      if (newCharList.length < 9) {\n        ended = true;\n      }\n\n      this.setState(({\n        offset,\n        charList\n      }) => ({\n        charList: [...charList, ...newCharList],\n        loading: false,\n        newItemLoading: false,\n        offset: offset + 9,\n        charEnded: ended\n      }));\n    };\n\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.onRequest();\n  }\n\n  focusChar(id) {\n    let char = this.state.charList;\n    const index = char.findIndex((element, index) => {\n      if (element === 2) {\n        return true;\n      }\n    });\n    console.log(index);\n  } // Этот метод создан для оптимизации, \n  // чтобы не помещать такую конструкцию в метод render\n\n\n  renderItems(arr) {\n    const items = arr.map((elt, i) => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n\n      if (elt.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        onClick: () => {\n          this.props.onCharSelected(elt.id);\n          this.focusChar(elt.id);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: elt.thumbnail,\n          alt: \"abyss\",\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: elt.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this);\n    }); // А эта конструкция вынесена для центровки спиннера/ошибки\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      charList,\n      loading,\n      error,\n      newItemLoading,\n      charEnded,\n      offset\n    } = this.state;\n    const items = this.renderItems(charList);\n    const content = !(loading || error) ? items : null;\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 35\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list\",\n      children: [content, errorMessage, spinner, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        disabled: newItemLoading,\n        style: {\n          'display': charEnded ? 'none' : 'block'\n        },\n        onClick: () => this.onRequest(offset),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CharList;","map":{"version":3,"sources":["/Users/uladzimirsiauko/Happy/Udemy/marvel_starter/src/components/charList/CharList.js"],"names":["React","MarvelService","ErrorMessage","Spinner","CharList","Component","state","charList","loading","error","newItemLoading","offset","charEnded","marvelService","onRequest","onCharListLoading","getAllCharacters","then","onCharListLoaded","catch","onError","setState","newCharList","ended","length","componentDidMount","focusChar","id","char","index","findIndex","element","console","log","renderItems","arr","items","map","elt","i","imgStyle","thumbnail","props","onCharSelected","name","render","content","errorMessage","spinner"],"mappings":"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","sourcesContent":["import './charList.scss';\nimport React from 'react';\nimport MarvelService from '../../services/MarvelService'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Spinner from '../spinner/spinner';\n\nclass CharList extends React.Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest()\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading()\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n\n        let ended = false\n        if (newCharList.length < 9) {\n            ended = true\n        }\n\n        this.setState(({ offset, charList }) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    focusChar(id) {\n        let char = this.state.charList\n        const index = char.findIndex((element, index) => {\n            if (element === 2) {\n                return true\n            }\n        })\n        console.log(index)\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items = arr.map((elt, i) => {\n            let imgStyle = { 'objectFit': 'cover' }\n            if (elt.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' }\n            }\n            return (\n                <li\n                    key={i}\n                    className=\"char__item\"\n                    onClick={() => {\n                        this.props.onCharSelected(elt.id)\n                        this.focusChar(elt.id)\n                    }}>\n                    <img src={elt.thumbnail} alt=\"abyss\" style={imgStyle} />\n                    <div className=\"char__name\">{elt.name}</div>\n                </li>\n            )\n        })\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const { charList, loading, error, newItemLoading, charEnded, offset } = this.state\n        const items = this.renderItems(charList)\n\n        const content = !(loading || error) ? items : null\n        const errorMessage = error ? <ErrorMessage /> : null\n        const spinner = loading ? <Spinner /> : null\n\n        return (\n            <div className=\"char__list\" >\n                {content}\n                {errorMessage}\n                {spinner}\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{ 'display': charEnded ? 'none' : 'block' }}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div >\n        )\n    }\n}\n\nexport default CharList;"]},"metadata":{},"sourceType":"module"}