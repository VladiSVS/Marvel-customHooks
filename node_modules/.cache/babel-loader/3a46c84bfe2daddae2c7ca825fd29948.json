{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useHttp } from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n  _s();\n\n  const {\n    loading,\n    request,\n    error\n  } = useHttp();\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  const _apiKey = 'apikey=1a5f0080e9249db8fc4741ff1f3581ec';\n  const _baseOffset = 210;\n\n  const getAllCharacters = async (offset = this._baseOffset) => {\n    const res = await getResource(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async id => {\n    const res = await getResource(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  _transformCharacter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    };\n  };\n\n  return {\n    loading,\n    error,\n    getAllCharacters,\n    getCharacter\n  };\n};\n\n_s(useMarvelService, \"7tk3rzNAyQKh/nKrzr/Nd6bathk=\", false, function () {\n  return [useHttp];\n});\n\nexport default useMarvelService;","map":{"version":3,"sources":["/Users/uladzimirsiauko/Happy/Udemy/marvel_starter_hooks/src/services/MarvelService.js"],"names":["useHttp","useMarvelService","loading","request","error","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","getResource","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","items"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,oBAAxB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAE3B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA8BJ,OAAO,EAA3C;AAEA,QAAMK,QAAQ,GAAG,2CAAjB;AACA,QAAMC,OAAO,GAAG,yCAAhB;AACA,QAAMC,WAAW,GAAG,GAApB;;AAEA,QAAMC,gBAAgB,GAAG,OAAOC,MAAM,GAAG,KAAKF,WAArB,KAAqC;AAC1D,UAAMG,GAAG,GAAG,MAAMC,WAAW,CAAE,GAAEN,QAAS,6BAA4BI,MAAO,IAAGH,OAAQ,EAA3D,CAA7B;AACA,WAAOI,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqBC,mBAArB,CAAP;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAOC,EAAP,IAAc;AAC/B,UAAMP,GAAG,GAAG,MAAMC,WAAW,CAAE,GAAEN,QAAS,cAAaY,EAAG,IAAGX,OAAQ,EAAxC,CAA7B;AACA,WAAOS,mBAAmB,CAACL,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAD,CAA1B;AACH,GAHD;;AAKAE,EAAAA,mBAAmB,GAAIG,IAAD,IAAU;AAC5B,WAAO;AACHD,MAAAA,EAAE,EAAEC,IAAI,CAACD,EADN;AAEHE,MAAAA,IAAI,EAAED,IAAI,CAACC,IAFR;AAGHC,MAAAA,WAAW,EAAEF,IAAI,CAACE,WAAL,GAAoB,GAAEF,IAAI,CAACE,WAAL,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,GAA1B,CAA+B,KAArD,GAA4D,4CAHtE;AAIHC,MAAAA,SAAS,EAAEJ,IAAI,CAACI,SAAL,CAAeC,IAAf,GAAsB,GAAtB,GAA4BL,IAAI,CAACI,SAAL,CAAeE,SAJnD;AAKHC,MAAAA,QAAQ,EAAEP,IAAI,CAACQ,IAAL,CAAU,CAAV,EAAaC,GALpB;AAMHC,MAAAA,IAAI,EAAEV,IAAI,CAACQ,IAAL,CAAU,CAAV,EAAaC,GANhB;AAOHE,MAAAA,MAAM,EAAEX,IAAI,CAACW,MAAL,CAAYC;AAPjB,KAAP;AASH,GAVD;;AAYA,SAAO;AAAE5B,IAAAA,OAAF;AAAWE,IAAAA,KAAX;AAAkBI,IAAAA,gBAAlB;AAAoCQ,IAAAA;AAApC,GAAP;AACH,CA/BD;;GAAMf,gB;UAEkCD,O;;;AA+BxC,eAAeC,gBAAf","sourcesContent":["import { useHttp } from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n\n    const { loading, request, error } = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\n    const _apiKey = 'apikey=1a5f0080e9249db8fc4741ff1f3581ec'\n    const _baseOffset = 210\n\n    const getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await getResource(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter)\n    }\n\n    const getCharacter = async (id) => {\n        const res = await getResource(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0])\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    return { loading, error, getAllCharacters, getCharacter }\n}\n\nexport default useMarvelService;"]},"metadata":{},"sourceType":"module"}