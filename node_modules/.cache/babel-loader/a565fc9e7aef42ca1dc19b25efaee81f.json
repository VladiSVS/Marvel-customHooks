{"ast":null,"code":"var _jsxFileName = \"/Users/uladzimirsiauko/Happy/Udemy/marvel_starter/src/components/charList/CharList.js\";\nimport './charList.scss';\nimport React from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CharList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charList: [],\n      loading: true,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.onCharListLoaded = charList => {\n      this.setState({\n        charList,\n        loading: false\n      });\n    };\n\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.marvelService.getAllCharacters().then(this.onCharListLoaded).catch(this.onError);\n  }\n\n  // Этот метод создан для оптимизации, \n  // чтобы не помещать такую конструкцию в метод render\n  renderItems(arr) {\n    const items = arr.map(elt => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n\n      if (elt.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: elt.thumbnail,\n          alt: \"abyss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: elt.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, elt.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    }); // А эта конструкция вынесена для центровки спиннера/ошибки\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      charList,\n      loading,\n      error\n    } = this.state;\n    const items = this.renderItems(charList);\n    const content = !(loading || error) ? items : null;\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 35\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list\",\n      children: [content, errorMessage, spinner, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CharList;","map":{"version":3,"sources":["/Users/uladzimirsiauko/Happy/Udemy/marvel_starter/src/components/charList/CharList.js"],"names":["React","MarvelService","ErrorMessage","Spinner","CharList","Component","state","charList","loading","error","marvelService","onCharListLoaded","setState","onError","componentDidMount","getAllCharacters","then","catch","renderItems","arr","items","map","elt","imgStyle","thumbnail","name","id","render","content","errorMessage","spinner"],"mappings":";AAAA,OAAO,iBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,OAAO,EAAE,IAFL;AAGJC,MAAAA,KAAK,EAAE;AAHH,KAF2B;AAAA,SAQnCC,aARmC,GAQnB,IAAIT,aAAJ,EARmB;;AAAA,SAiBnCU,gBAjBmC,GAiBfJ,QAAD,IAAc;AAC7B,WAAKK,QAAL,CAAc;AACVL,QAAAA,QADU;AAEVC,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH,KAtBkC;;AAAA,SAwBnCK,OAxBmC,GAwBzB,MAAM;AACZ,WAAKD,QAAL,CAAc;AACVJ,QAAAA,OAAO,EAAE,KADC;AAEVC,QAAAA,KAAK,EAAE;AAFG,OAAd;AAKH,KA9BkC;AAAA;;AAUnCK,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,aAAL,CACKK,gBADL,GAEKC,IAFL,CAEU,KAAKL,gBAFf,EAGKM,KAHL,CAGW,KAAKJ,OAHhB;AAIH;;AAiBD;AACA;AACAK,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,UAAMC,KAAK,GAAGD,GAAG,CAACE,GAAJ,CAAQC,GAAG,IAAI;AACzB,UAAIC,QAAQ,GAAG;AAAE,qBAAa;AAAf,OAAf;;AACA,UAAID,GAAG,CAACE,SAAJ,KAAkB,qEAAtB,EAA6F;AACzFD,QAAAA,QAAQ,GAAG;AAAE,uBAAa;AAAf,SAAX;AACH;;AACD,0BACI;AAAiB,QAAA,SAAS,EAAC,YAA3B;AAAA,gCACI;AAAK,UAAA,GAAG,EAAED,GAAG,CAACE,SAAd;AAAyB,UAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA6BF,GAAG,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAASH,GAAG,CAACI,EAAb;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAXa,CAAd,CADa,CAab;;AACA,wBACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACKN;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAEDO,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEpB,MAAAA,QAAF;AAAYC,MAAAA,OAAZ;AAAqBC,MAAAA;AAArB,QAA+B,KAAKH,KAA1C;AACA,UAAMc,KAAK,GAAG,KAAKF,WAAL,CAAiBX,QAAjB,CAAd;AAEA,UAAMqB,OAAO,GAAG,EAAEpB,OAAO,IAAIC,KAAb,IAAsBW,KAAtB,GAA8B,IAA9C;AACA,UAAMS,YAAY,GAAGpB,KAAK,gBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAsB,IAAhD;AACA,UAAMqB,OAAO,GAAGtB,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAiB,IAAxC;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,iBACKoB,OADL,EAEKC,YAFL,EAGKC,OAHL,eAII;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA1EkC;;AA6EvC,eAAe1B,QAAf","sourcesContent":["import './charList.scss';\nimport React from 'react';\nimport MarvelService from '../../services/MarvelService'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Spinner from '../spinner/spinner';\n\nclass CharList extends React.Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.marvelService\n            .getAllCharacters()\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoaded = (charList) => {\n        this.setState({\n            charList,\n            loading: false\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items = arr.map(elt => {\n            let imgStyle = { 'objectFit': 'cover' }\n            if (elt.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' }\n            }\n            return (\n                <li key={elt.id} className=\"char__item\">\n                    <img src={elt.thumbnail} alt=\"abyss\" />\n                    <div className=\"char__name\">{elt.name}</div>\n                </li>\n            )\n        })\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const { charList, loading, error } = this.state\n        const items = this.renderItems(charList)\n\n        const content = !(loading || error) ? items : null\n        const errorMessage = error ? <ErrorMessage /> : null\n        const spinner = loading ? <Spinner /> : null\n\n        return (\n            <div className=\"char__list\" >\n                {content}\n                {errorMessage}\n                {spinner}\n                <button className=\"button button__main button__long\">\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;"]},"metadata":{},"sourceType":"module"}