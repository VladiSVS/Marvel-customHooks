{"ast":null,"code":"var _jsxFileName = \"/Users/uladzimirsiauko/Happy/Udemy/marvel_starter_hooks/src/components/charInfo/CharInfo.js\",\n    _s = $RefreshSig$();\n\nimport './charInfo.scss';\nimport { useState, useEffect } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CharInfo = props => {\n  _s();\n\n  const [char, setChar] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const marvelService = new MarvelService();\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const updateChar = () => {\n    if (!props.charId) {\n      return;\n    }\n\n    onCharLoading();\n    marvelService.getCharacter(props.charId).then(onCharLoaded).catch(onError);\n  };\n\n  const onCharLoaded = char => {\n    setChar(char);\n    setLoading(false);\n  };\n\n  const onCharLoading = () => {\n    setLoading(true);\n  };\n\n  const onError = () => {\n    setLoading(false);\n    setError(true);\n  };\n\n  const skeleton = char || loading || error ? null : /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 56\n  }, this);\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 34\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 31\n  }, this) : null;\n  const content = !(loading || error || !char) ? /*#__PURE__*/_jsxDEV(View, {\n    char: char\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 52\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__info\",\n    children: [skeleton, errorMessage, spinner, content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CharInfo, \"D3chy/lXmZhIvYzZw5q0wNlgvZo=\");\n\n_c = CharInfo;\n\nconst View = ({\n  char\n}) => {\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki,\n    comics\n  } = char;\n  let imgStyle = {\n    'objectFit': 'cover'\n  };\n\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = {\n      'objectFit': 'unset'\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__basics\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail,\n        alt: name,\n        style: imgStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: homepage,\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"homepage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: wiki,\n            className: \"button button__secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Wiki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__descr\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__comics\",\n      children: \"Comics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__comics-list\",\n      children: [comics.length > 0 ? null : 'Not Found', comics.map((elt, i) => {\n        if (i > 9) {\n          return;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"char__comics-item\",\n          children: elt.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = View;\nexport default CharInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CharInfo\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["/Users/uladzimirsiauko/Happy/Udemy/marvel_starter_hooks/src/components/charInfo/CharInfo.js"],"names":["useState","useEffect","MarvelService","Spinner","ErrorMessage","Skeleton","CharInfo","props","char","setChar","loading","setLoading","error","setError","marvelService","updateChar","charId","onCharLoading","getCharacter","then","onCharLoaded","catch","onError","skeleton","errorMessage","spinner","content","View","name","description","thumbnail","homepage","wiki","comics","imgStyle","length","map","elt","i"],"mappings":"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","sourcesContent":["import './charInfo.scss';\nimport { useState, useEffect } from 'react';\nimport MarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Skeleton from '../skeleton/Skeleton'\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(false)\n\n    const marvelService = new MarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    const updateChar = () => {\n        if (!props.charId) {\n            return\n        }\n\n        onCharLoading()\n\n        marvelService\n            .getCharacter(props.charId)\n            .then(onCharLoaded)\n            .catch(onError)\n\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char)\n        setLoading(false)\n    }\n\n    const onCharLoading = () => {\n        setLoading(true)\n    }\n\n    const onError = () => {\n        setLoading(false)\n        setError(true)\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton />\n    const errorMessage = error ? <ErrorMessage /> : null\n    const spinner = loading ? <Spinner /> : null\n    const content = !(loading || error || !char) ? <View char={char} /> : null\n    return (\n        <div className=\"char__info\" >\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({ char }) => {\n\n    const { name, description, thumbnail, homepage, wiki, comics } = char\n\n    let imgStyle = { 'objectFit': 'cover' }\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { 'objectFit': 'unset' }\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'Not Found'}\n                {\n                    comics.map((elt, i) => {\n                        if (i > 9) {\n                            return\n                        }\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {elt.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}