{"ast":null,"code":"var _jsxFileName = \"/Users/uladzimirsiauko/Happy/Udemy/marvel_starter/src/components/charInfo/CharInfo.js\";\nimport './charInfo.scss';\nimport React from 'react';\nimport thor from '../../resources/img/thor.jpeg';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CharInfo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      char: null,\n      loading: false,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.updateChar = () => {\n      const {\n        charId\n      } = this.props;\n\n      if (!charId) {\n        return;\n      }\n\n      this.onCharLoading();\n      this.marvelService.getCharacter(charId).then(this.onCharLoaded).catch(this.onError);\n    };\n\n    this.onCharLoaded = char => {\n      this.setState({\n        char,\n        loading: false\n      });\n    };\n\n    this.onCharLoading = () => {\n      this.setState({\n        loading: true\n      });\n    };\n\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  render() {\n    const {\n      char,\n      loading,\n      error\n    } = this.state;\n    const skeleton = char || loading || error ? null : /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 60\n    }, this);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 35\n    }, this) : null;\n    const content = !(loading || error || !char) ? /*#__PURE__*/_jsxDEV(View, {\n      char: char\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 56\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__info\",\n      children: [skeleton, errorMessage, spinner, content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst View = ({\n  char\n}) => {\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki,\n    comics\n  } = char;\n  let imgStyle = {\n    'objectFit': 'cover'\n  };\n\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = {\n      'objectFit': 'unset'\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__basics\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail,\n        alt: name,\n        style: imgStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: homepage,\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"homepage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: wiki,\n            className: \"button button__secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Wiki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__descr\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__comics\",\n      children: \"Comics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__comics-list\",\n      children: comics.map((elt, i) => {\n        if (i > 9) return;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"char__comics-item\",\n          children: elt.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = View;\nexport default CharInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["/Users/uladzimirsiauko/Happy/Udemy/marvel_starter/src/components/charInfo/CharInfo.js"],"names":["React","thor","MarvelService","Spinner","ErrorMessage","Skeleton","CharInfo","Component","state","char","loading","error","marvelService","updateChar","charId","props","onCharLoading","getCharacter","then","onCharLoaded","catch","onError","setState","componentDidMount","componentDidUpdate","prevProps","render","skeleton","errorMessage","spinner","content","View","name","description","thumbnail","homepage","wiki","comics","imgStyle","map","elt","i"],"mappings":"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","sourcesContent":["import './charInfo.scss';\nimport React from 'react';\nimport thor from '../../resources/img/thor.jpeg';\nimport MarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Skeleton from '../skeleton/Skeleton'\n\nclass CharInfo extends React.Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar()\n        }\n    }\n\n    updateChar = () => {\n        const { charId } = this.props\n        if (!charId) {\n            return\n        }\n\n        this.onCharLoading()\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n\n        const { char, loading, error } = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton />\n        const errorMessage = error ? <ErrorMessage /> : null\n        const spinner = loading ? <Spinner /> : null\n        const content = !(loading || error || !char) ? <View char={char} /> : null\n        return (\n            <div className=\"char__info\" >\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n\n    const { name, description, thumbnail, homepage, wiki, comics } = char\n\n    let imgStyle = { 'objectFit': 'cover' }\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { 'objectFit': 'unset' }\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {\n                    comics.map((elt, i) => {\n                        if (i > 9) return\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {elt.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}