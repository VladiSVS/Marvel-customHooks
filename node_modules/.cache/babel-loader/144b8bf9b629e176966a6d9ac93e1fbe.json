{"ast":null,"code":"var _jsxFileName = \"/Users/uladzimirsiauko/Happy/Udemy/marvel_starter/src/components/charList/CharList.js\";\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CharList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charList: [],\n      loading: true,\n      error: false,\n      newItemLoading: false,\n      offset: 210,\n      charEnded: false,\n      focusChar: true\n    };\n    this.marvelService = new MarvelService();\n\n    this.onRequest = offset => {\n      this.onCharListLoading();\n      this.marvelService.getAllCharacters(offset).then(this.onCharListLoaded).catch(this.onError);\n    };\n\n    this.onCharListLoading = () => {\n      this.setState({\n        newItemLoading: true\n      });\n    };\n\n    this.onCharListLoaded = newCharList => {\n      let ended = false;\n\n      if (newCharList.length < 9) {\n        ended = true;\n      }\n\n      this.setState(({\n        offset,\n        charList\n      }) => ({\n        charList: [...charList, ...newCharList],\n        loading: false,\n        newItemLoading: false,\n        offset: offset + 9,\n        charEnded: ended\n      }));\n    };\n\n    this.onError = () => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n\n    this.itemRefs = [];\n\n    this.setRef = ref => {\n      this.itemRefs.push(ref);\n    };\n\n    this.focusOnItem = id => {\n      // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n      // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n      // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n      // в отдельный компонент. Но кода будет больше, появится новое состояние\n      // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n      // По возможности, не злоупотребляйте рефами, только в крайних случаях\n      this.setState({\n        focusChar: false\n      });\n      this.itemRefs[id].classList.toggle('char__item_selected');\n      this.itemRefs[id].focus();\n    };\n  }\n\n  componentDidMount() {\n    this.onRequest();\n  }\n\n  // Этот метод создан для оптимизации, \n  // чтобы не помещать такую конструкцию в метод render\n  renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: this.state.focusChar ? \"char__item\" : null,\n        tabIndex: 0,\n        ref: this.setRef,\n        onClick: () => {\n          this.props.onCharSelected(item.id);\n          this.focusOnItem(i);\n        },\n        onKeyPress: e => {\n          if (e.key === ' ' || e.key === \"Enter\") {\n            this.props.onCharSelected(item.id);\n            this.focusOnItem(i);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this);\n    }); // А эта конструкция вынесена для центровки спиннера/ошибки\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      charList,\n      loading,\n      error,\n      offset,\n      newItemLoading,\n      charEnded\n    } = this.state;\n    const items = this.renderItems(charList);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 35\n    }, this) : null;\n    const content = !(loading || error) ? items : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list\",\n      children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        disabled: newItemLoading,\n        style: {\n          'display': charEnded ? 'none' : 'block'\n        },\n        onClick: () => this.onRequest(offset),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired\n};\nexport default CharList;","map":{"version":3,"sources":["/Users/uladzimirsiauko/Happy/Udemy/marvel_starter/src/components/charList/CharList.js"],"names":["Component","PropTypes","Spinner","ErrorMessage","MarvelService","CharList","state","charList","loading","error","newItemLoading","offset","charEnded","focusChar","marvelService","onRequest","onCharListLoading","getAllCharacters","then","onCharListLoaded","catch","onError","setState","newCharList","ended","length","itemRefs","setRef","ref","push","focusOnItem","id","classList","toggle","focus","componentDidMount","renderItems","arr","items","map","item","i","imgStyle","thumbnail","props","onCharSelected","e","key","name","render","errorMessage","spinner","content","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false,\n        focusChar: true,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({ offset, charList }) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        this.setState({ focusChar: false })\n        this.itemRefs[id].classList.toggle('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = { 'objectFit': 'cover' };\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' };\n            }\n\n            return (\n                <li\n                    className={this.state.focusChar ? \"char__item\" : null}\n                    tabIndex={0}\n                    ref={this.setRef}\n                    key={item.id}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(i);\n                        }\n                    }}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const { charList, loading, error, offset, newItemLoading, charEnded } = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{ 'display': charEnded ? 'none' : 'block' }}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;"]},"metadata":{},"sourceType":"module"}